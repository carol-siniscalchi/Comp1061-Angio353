##### Analyses from "Lineage-specific vs. universal: a comparison of the Compositae-1061 and Angiosperms-353 enrichment panels in the sunflower family" #####

######################
## Running HybPiper ##
######################

# Run Trimmomatic in each pair of fastq files:

for fileR1 in *R1.fastq
do
fileR2=`echo ${fileR1} | sed 's/R1/R2/'`
java -jar /home/programs/trimmomatic-0.36.jar PE $fileR1 $fileR2 $fileR1.tp.fastq $fileR1.tunp.fastq $fileR2.tp.fastq $fileR2.tunp.fastq ILLUMINACLIP:/home/programs/adapters/TruSeq3-PE.fa:2:30:10 LEADING:20 TRAILING:20 SLIDINGWINDOW:5:20 MINLEN:36
done

# gather all trimmed files in the same folder to run HybPiper
# this runs the reads_first.py script for all pairs of files in the folder, change path
# reference.fasta is the multifasta file with the target locus sequences
# namelist.txt should have the name of the samples that you want to run through the pipeline

while read name; 
do python /home/programs/HybPiper-1.3.1/reads_first.py -b reference_file.fasta -r $name*.fastq --prefix $name --bwa 
done < namelist.txt

#this bit will get information about the sequences, that can be used with the gene_recovery_heatmap.R in R to generate a heatmap: 
python /home/programs/HybPiper-1.3.1/get_seq_lengths.py reference_file.fasta namelist.txt dna > test_seq_lengths.txt

#this bit will get summary statistics on the sequences:
python /home/programs/HybPiper-1.3.1/hybpiper_stats.py test_seq_lengths.txt namelist.txt > test_stats.txt

# This will run retrieve_sequences.py and generate one FNA file for each locus in your set, containing one sequence for each samples
python /home/programs/HybPiper-1.3.1/retrieve_sequences.py reference_file.fasta ./ dna

# Clean up spades files:
while read name; 
do python /home/programs/HybPiper-1.3.1/cleanup.py $name
done < namelist.txt

#to exclude loci with paralog warnings, do this in each sample folder after running reads_first.py but before retrieve_sequences.py
while read name; 
do 
mv $name/sample/sequences/FNA/$name.FNA $name/samples/sequences/FNA/$name.FNA.exclude
done < genes_with_paralog_warnings.txt


######################
## Running Mafft    ##
######################

# Aligning FNA with mafft in auto mode:

for file in *.FNA
do
/home/programs/mafft/mafft --auto $file > $file.mafft
done

# move aligned FNA to another folder

######################
## Running RAxML    ##
######################

#Generating genetrees with Raxml:

DIR_I=/home/alignedFNA/*.mafft

for f in $DIR_I
do
file_name=$(basename $f)
/home/programs/raxmlHPC-PTHREADS-SSE3 -T 2 -f a -p 12345 -x 12345 -m GTRGAMMAI -# 100 -s $f -n $file_name -w /home/alignedFNA/genetrees
done

# concatenate BestTrees for Astral input:
cat RAxML_bestTree.* > astral_input.tre

######################
## Running Astral   ##
######################

# Running Astral
java -jar /home/programs/ASTRAL-master/Astral/astral.5.6.3.jar -i astral_input.tre -o astral_output.tre 2> astral.log

# Scoring the tree (local posterior probabilities)
java -jar /home/programs/ASTRAL-master/Astral/astral.5.6.3.jar -q astral_output.tre -i astral_input.tre -o astral_output_scored.tre 2> score.log

######################
## Running Phyparts ##
######################

# all gene trees and species trees need to be rooted to run PhyParts. Rooting can be done using Phyx, using the program pxrr

# root species tree:
pxrr -t unrooted_tree.tre -g outgroup_name > rooted_tree.tre

# use the concatenated best trees (Astral input) to root gene trees:
# the option -r forces a rank for the outgroups
pxrr -t astral_input.tre -r -s -g outgroup1,outgroup2,outgroup3 > astral_input_rooted.tre

# split the concatenated gene trees file into several files containing one tree each:
split -d -l 1 astral_input_rooted.tre gene

# add .tre extension
for i in *; do mv "$i" "$i.tre"; done

#move all files to a folder

# run PhyParts:
java -jar target/phyparts-0.0.1-SNAPSHOT-jar-with-dependencies.jar -a 1 -v -d folder_w_genetrees/ -m rooted_species_tree.tre -o output

# plot pie charts
# download the phypartspiecharts.py script from GitHub, put it in the same folder as the outputs from PhyParts

python phypartspiecharts.py rooted_species_tree.tre output 869
# the last number is the number of genetrees

